name: CI Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  # ------------------
  # BUILD STAGE
  # ------------------
  package-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install fastapi uvicorn jinja2 pytest pylint black pytest-cov sqlalchemy torchvision torchaudio

  package-staging-build:
    runs-on: ubuntu-latest
    needs: package-build
    steps:
      - uses: actions/checkout@v4
      - name: Build Staging Package
        run: echo "Building staging package..."

  # ------------------
  # VALIDATION STAGE
  # ------------------
  json-validation:
    runs-on: ubuntu-latest
    needs: package-build
    steps:
      - uses: actions/checkout@v4
      - name: Validate JSON
        run: echo "Validating JSON..."

  yaml-validation:
    runs-on: ubuntu-latest
    needs: package-build
    steps:
      - uses: actions/checkout@v4
      - name: Validate YAML
        run: echo "Validating YAML..."

  # ------------------
  # TEST STAGE
  # ------------------
  unittest-spark:
    runs-on: ubuntu-latest
    needs: [json-validation, yaml-validation]
    strategy:
      matrix:
        spark: [2.4.7, 3.0.2]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install test dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest
      - name: Run tests
        run: |
          echo "Running Spark ${{ matrix.spark }} tests..."
          pytest

  # ------------------
  # QUALITY STAGE
  # ------------------
  coverage:
    runs-on: ubuntu-latest
    needs: unittest-spark
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install coverage dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov
      - name: Check coverage
        run: |
          pytest --cov=app --cov=tests --cov-report=term-missing --cov-fail-under=80

  pylint-report:
    runs-on: ubuntu-latest
    needs: unittest-spark
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install pylint
        run: pip install pylint
      - name: Run pylint
        run: pylint app || exit 1
